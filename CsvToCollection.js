// Generated by CoffeeScript 1.6.2
(function() {
    var Fibers, csvtojson, fs;

    Fibers = Npm.require('fibers');
    fs = Npm.require('fs');
    csvtojson = Npm.require('csvtojson');

    this.ctc = {
        CreateCollection: function(filePath, onComplete, serverAssets) {
            var collection, e;
            if (serverAssets == null) {
                serverAssets = void 0;
            }
            collection = new Meteor.Collection(filePath.split("/").pop());
            if (Meteor.isServer) {
                try {
                    collection.remove({});
                    this.AddCsvToCollection(filePath, collection, onComplete, serverAssets);
                } catch (_error) {
                    e = _error;
                    console.log(e);
                    console.log("ctc.CreateCollection failed path: " + filePath);
                }
            }
            return collection;
        },
        AddCsvToCollection: function(filePath, collection, onComplete, serverAssets) {
            var csvConverter, data;
            if (serverAssets == null) {
                serverAssets = void 0;
            }
            if (Meteor.isServer) {
                csvConverter = new csvtojson.core.Converter();
                csvConverter.on('end_parsed', function(jsonArray) {
                    return Fibers(function() {
                        var doc, _i, _len;
                        for (_i = 0, _len = jsonArray.length; _i < _len; _i++) {
                            doc = jsonArray[_i];
                            collection.insert(doc);
                        }
                        return typeof onComplete === "function" ? onComplete(jsonArray) : void 0;
                    }).run();
                });
                if (serverAssets != null) {
                    data = serverAssets.getText(filePath);
                    csvConverter.fromString(data, function(e, jsonArray) {
                        if (e) {
                            console.log(e);
                        }
                        //console.log(jsonArray);
                    });
                    return csvConverter;
                }
                return fs.createReadStream("../client/app/" + filePath).pipe(csvConverter);
            }
        }
    };
}).call(this);
